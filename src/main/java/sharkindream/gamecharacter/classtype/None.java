package sharkindream.gamecharacter.classtype;

import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.paint.Paint;

public class None extends Prototype{

	//プレイヤーのステータス
	//物理攻撃↓ 物理防御↓ 魔法攻撃↓ 魔法防御↓ HP60 MP無限
	//状態異常の確率up


	public final static String name = "None";
	public final static String comment = "None";

	Canvas canvas = new Canvas(50, 50);
	GraphicsContext g;

	public None() {
		super(0.7F, 0.7F, 0.7F, 0.7F, 1.0F, 1.0F);
	}

	private void draw(Paint color, Paint backcolor) {

		g = canvas.getGraphicsContext2D();

		g.beginPath();

		g.appendSVGPath("M 36.81 13.20 C 39.27 15.65 39.69 18.56 41.10 21.57 C 42.34 21.49 43.58 21.29 44.80 21.13 C 43.18 22.35 40.73 23.13 40.36 25.35 C 39.66 28.03 38.17 30.26 37.14 32.78 C 39.65 34.22 42.29 34.70 44.06 36.88 C 41.33 36.09 38.81 34.58 36.05 33.98 C 32.56 35.20 29.94 37.28 26.01 37.07 C 22.16 37.43 19.31 35.74 15.88 34.45 C 13.91 34.84 12.01 35.56 10.06 36.04 C 11.43 34.98 12.89 34.04 14.29 33.02 C 11.54 29.34 11.65 24.78 8.27 21.68 C 9.99 22.13 11.93 22.57 13.45 23.51 C 14.63 24.33 14.40 25.85 16.05 26.10 C 14.99 26.48 13.91 26.81 12.81 27.11 L 12.47 26.65 L 12.81 27.11 C 13.96 32.17 18.02 34.54 22.63 36.05 C 22.51 35.07 22.38 34.09 22.24 33.12 C 23.19 34.02 24.02 35.37 25.24 35.88 C 28.19 36.31 31.14 35.29 33.66 33.83 C 33.20 32.95 32.69 32.12 32.19 31.26 C 33.37 31.43 34.52 31.65 35.70 31.74 C 37.40 30.27 38.38 28.33 39.06 26.22 C 36.72 26.74 33.82 27.32 31.98 28.93 C 30.44 30.80 29.60 33.13 27.96 34.96 C 28.06 32.20 29.46 30.18 30.75 27.86 C 29.18 28.59 27.62 29.45 25.99 30.01 C 23.54 29.30 21.51 27.54 18.96 26.95 C 20.06 28.59 21.58 29.71 23.04 31.00 C 21.44 31.78 19.79 32.44 18.13 33.06 C 18.70 32.08 19.31 31.12 19.81 30.12 C 18.93 29.06 17.94 28.11 17.05 27.05 C 20.93 24.09 24.16 29.86 28.46 27.53 C 31.98 25.72 37.11 24.54 39.95 22.01 C 39.16 18.32 37.54 14.91 34.52 12.55 C 33.58 11.96 32.12 10.38 31.00 11.17 C 30.64 12.23 30.53 13.37 30.67 14.59 C 31.26 14.36 31.85 14.13 32.44 13.90 C 34.08 15.42 35.65 17.51 36.25 19.67 C 34.65 21.42 31.67 25.04 29.13 22.90 C 27.67 21.85 26.40 19.17 28.10 17.77 C 28.73 19.74 28.26 22.04 30.96 22.37 C 33.48 22.12 34.09 20.42 34.05 18.15 C 33.42 18.59 32.79 19.03 32.16 19.48 C 32.17 18.45 32.17 17.41 32.17 16.38 C 31.54 16.73 30.91 17.07 30.28 17.41 C 29.53 16.78 28.55 15.67 28.77 14.61 C 29.56 13.41 30.61 12.70 30.47 11.11 C 29.03 9.22 25.71 8.79 23.50 9.40 C 19.00 10.27 14.35 13.17 12.72 17.62 C 12.17 18.66 11.98 20.45 10.85 20.97 C 11.00 17.39 12.61 14.56 15.21 12.20 C 21.27 6.70 31.30 7.12 36.81 13.20 Z");
		g.setFill(color);
		g.fill();
		g.closePath();

		g.beginPath();
		g.appendSVGPath("M 22.77 16.19 C 24.32 18.79 24.36 19.79 22.43 22.14 C 22.53 19.55 23.37 17.88 20.89 16.11 C 19.17 16.38 17.31 16.99 17.06 18.98 C 17.16 21.80 20.02 21.52 20.84 23.86 C 17.17 23.16 15.89 20.90 15.60 17.38 C 17.49 16.00 21.30 12.50 22.77 16.19 Z");
		g.setFill(color);
		g.fill();
		g.closePath();

	}

	public Canvas geticon() {

		draw(Paint.valueOf("#000000"), Paint.valueOf("#f4f4f4"));
		return canvas;
	}

	@Override
	public Canvas geticon(Paint color) {
		draw(color, Paint.valueOf("#f4f4f4"));
		return canvas;
	}

	@Override
	public String getname() {
		// TODO 自動生成されたメソッド・スタブ
		return this.name;
	}

	@Override
	public String getcomment() {
		// TODO 自動生成されたメソッド・スタブ
		return this.comment;
	}

	@Override
	public Canvas geticon(Paint color, Paint backcolor) {
		draw(color, backcolor);
		return canvas;
	}

}
